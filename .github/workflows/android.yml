name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: "17"
        distribution: "temurin"
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    
    # Clean Build
    - name: Clean Build
      run: ./gradlew clean

    # Create google-services
    - name: Create google-services
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES_JSON_RELEASE }}
      run: echo $DATA >> D:\a\OnAndOff-Android\OnAndOff-Android\app\google-services.json
    
    # Build Debug APK
    - name: Build Debug APK
      id: buildDebug
      run: ./gradlew assembleDebug
    
    # Build Release APK
    - name: Build Release Apk
      run: ./gradlew assembleRelease
    
    # Build AAB Release
    - name: Build release Bundle
      run: ./gradlew bundleRelease
    
    # Upload AAB
    - name: Upload a Build AAB Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        # Artifact name
        name: app-release.aab
        # A file, directory or wildcard pattern that describes what to upload
        path: ./app/release/app-release.aab
        retention-days: 14
        
    # Upload APK
    - name: Upload a Build APK Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        # Artifact name
        name: app-release.apk
        # A file, directory or wildcard pattern that describes what to upload
        path: ./app/build/outputs/apk/release/app-release.apk
        retention-days: 14

    # Sign Android Release Action
    - name: Sign APK
      id: sign_app
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/release
        signingKeyBase64: ${{ secrets.APP_RELEASE_KEY_STORE_BASE64 }}
        alias: ${{ secrets.SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
